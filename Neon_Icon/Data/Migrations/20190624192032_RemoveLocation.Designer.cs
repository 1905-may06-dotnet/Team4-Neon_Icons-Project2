// <auto-generated />
using Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190624192032_RemoveLocation")]
    partial class RemoveLocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Preferences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre")
                        .HasColumnName("genre_id");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<int>("WeatherId")
                        .HasColumnName("weather_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WeatherId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("Data.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnName("location");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Entities.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultGenre")
                        .HasColumnName("default_genre");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("Data.Entities.Preferences", b =>
                {
                    b.HasOne("Data.Entities.Users", "User")
                        .WithMany("Preferences")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Preferenc__user___534D60F1");

                    b.HasOne("Data.Entities.Weather", "Weather")
                        .WithMany("Preferences")
                        .HasForeignKey("WeatherId")
                        .HasConstraintName("FK__Preferenc__weath__5441852A");
                });
#pragma warning restore 612, 618
        }
    }
}
